groups:
  - name: "Container Image"
    description: "configure container image"
  - name: "Configuration"
    description: "additional container configuration"
  - name: "Networking"
    description: "network / service configuration"
  - name: "Storage"
    description: "configure app volume mounts"
  - name: "Ingress"
    description: "Reverse Proxy configuration"

portals:
  web_portal:
    protocols:
      - "http"
    host:
      - "$node_ip"
    ports:
      - "$variable-service.port.nodePort"

questions:
  # Image related
  - variable: image
    group: "Container Image"
    label: "Home Assistant"
    schema:
      type: dict
      required: true
      attrs:
        - variable: repository
          label: "Image Repository"
          schema:
            type: string
            default: "homeassistant/home-assistant"
            editable: false
        - variable: tag
          label: "Image Tag"
          description: "Tag to use for specified image"
          schema:
            type: string
            default: "stable"
            required: true
        - variable: pullPolicy
          label: "Image Pull Policy"
          schema:
            type: string
            default: "IfNotPresent"
            enum:
              - value: "IfNotPresent"
                description: "Only pull image if not present on host"
              - value: "Always"
                description: "Always pull image even if present on host"
              - value: "Never"
                description: "Never pull image even if it's not present on host"
  # Update Policy
  - variable: strategyType
    group: "Container Image"
    label: "Update Strategy"
    schema:
      type: string
      default: "Recreate"
      enum:
        - value: "RollingUpdate"
          description: "Create new pods and then kill old ones"
        - value: "Recreate"
          description: "Kill existing pods before creating new ones"

  # Configure Time Zone
  - variable: timezone
    group: "Configuration"
    label: "Timezone"
    schema:
      type: string
      default: "Etc/UTC"
      $ref:
        - "definitions/timezone"

  - variable: PUID
    group: "Configuration"
    label: "PUID"
    description: "The UserID of the user running the application and owning the files"
    schema:
      type: int
      default: 568

  - variable: PGID
    group: "Configuration"
    label: "PGID"
    description: "The groupID of the user/group running the application and owning the files"
    schema:
      type: int
      default: 568

  - variable: UMASK
    group: "Configuration"
    label: "UMASK (advanced)"
    description: "The UMASK used if supported by the application"
    schema:
      type: string
      default: "002"

  # Configure Time Zone
  - variable: git
    group: "Configuration"
    label: "Git"
    description: "Attatch git repository to Home-Assistant"
    schema:
      type: dict
      attrs:
        - variable: deployKey
          label: "deployKey"
          description: "Raw SSH private key"
          schema:
            type: string
            default: ""
        - variable: deployKeyBase64
          label: "deployKey"
          description: "Base64-encoded SSH private key. When both variables are set, the raw SSH key takes precedence"
          schema:
            type: string
            default: ""

  # Configure app volumes
  - variable: appVolumeMounts
    group: "Storage"
    label: ""
    schema:
      type: dict
      attrs:
        # Config ------------------------
        - variable: config
          label: "Config Volume"
          schema:
            type: dict
            $ref:
              - "normalize/ixVolume"
            attrs:
              - variable: enabled
                label: "Enabled"
                schema:
                  type: boolean
                  default: true
                  required: true
                  hidden: true
                  editable: false
              - variable: setPermissions
                label: "Automatic Permissions"
                description: "Automatically set permissions on install"
                schema:
                  type: boolean
                  default: true
                  hidden: false
              - variable: emptyDir
                label: "emptyDir"
                schema:
                  type: boolean
                  default: false
                  hidden: true
                  editable: false
              - variable: datasetName
                label: "Name"
                schema:
                  type: string
                  default: "config"
                  editable: false
              - variable: mountPath
                label: "Mount path inside the container"
                schema:
                  type: path
                  default: "/config"
                  editable: false
              - variable: hostPathEnabled
                label: "Config - Enable Host Path"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Config Host Path"
                      schema:
                        type: hostpath
                        required: true
        # Z-Wave device -----------------
        - variable: zwave
          label: "USB Z-Wave Device"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "USB Z-Wave Device"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPathEnabled
                      label: "enabled"
                      schema:
                        type: boolean
                        default: true
                        hidden: true
                    - variable: setPermissions
                      label: "Automatic Permissions"
                      description: "Automatically set permissions on install"
                      schema:
                        type: boolean
                        default: false
                        hidden: true
                    - variable: hostPath
                      label: "Path to Z-Wave device on host"
                      schema:
                        type: path
                        required: true
                        default: "/dev/ttyUSB0"
                    - variable: mountPath
                      label: "Path to mount device inside the container"
                      schema:
                        type: path
                        required: true
                        default: "/dev/ttyUSB0"
        # Zigbee device -----------------
        - variable: zigbee
          label: "USB Zigbee Device"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "USB Zigbee Device"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPathEnabled
                      label: "enabled"
                      schema:
                        type: boolean
                        default: true
                        hidden: true
                    - variable: setPermissions
                      label: "Automatic Permissions"
                      description: "Automatically set permissions on install"
                      schema:
                        type: boolean
                        default: false
                        hidden: true
                    - variable: hostPath
                      label: "Path to Zigbee device on host"
                      schema:
                        type: path
                        required: true
                        default: "/dev/ttyUSB1"
                    - variable: mountPath
                      label: "Path to mount device inside the container"
                      schema:
                        type: path
                        required: true
                        default: "/dev/ttyUSB1"
  # Enable privileged
  - variable: securityContext
    group: "Storage"
    label: "Security Context"
    schema:
      type: dict
      attrs:
        - variable: privileged
          label: "Enable privileged to pass thru a USB device from the host"
          schema:
            type: boolean
            default: false

  # Enable Host Network
  - variable: hostNetwork
    group: "Networking"
    label: "Enable Host Network"
    description: "Required if you want devices to be discoverable by Home Assistant"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: dnsPolicy
          group: "Networking"
          label: "Set the correct DNS policy"
          description: "Required to be set to ClusterFirstWithHostNet when using hostNetwork"
          schema:
            type: string
            default: "ClusterFirst"
            enum:
              - value: "ClusterFirst"
                description: "ClusterFirst"
              - value: "ClusterFirstWithHostNet"
                description: "ClusterFirstWithHostNet"



  # Service Configuration
  - variable: services
    group: "Networking"
    label: "Configure Service"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the service"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Service type"
                description: "ClusterIP's are only internally available, nodePorts expose the container to the host node System"
                schema:
                  type: string
                  default: "ClusterIP"
                  enum:
                    - value: "nodePort"
                      description: "NodePort"
                    - value: "ClusterIP"
                      description: "ClusterIP"
              - variable: port
                label: "Port configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: protocol
                      label: "Port Type"
                      schema:
                        type: string
                        default: "TCP"
                        hidden: true
                        enum:
                          - value: TCP
                            description: "TCP"
                          - value: "UDP"
                            description: "UDP"
                    - variable: port
                      label: "container port"
                      schema:
                        type: int
                        default: 8123
                        editable: false
                        hidden: true
                    - variable: targetport
                      label: "Internal Service port"
                      description: "When connecting internally to this App, you'll need this port"
                      schema:
                        type: int
                        default: 8123
                        editable: true
                    - variable: nodePort
                      label: "(optional) host nodePort to expose to"
                      description: "only get used when nodePort is selected"
                      schema:
                        type: int
                        min: 9000
                        max: 65535
                        default: 36052
                        required: true

  - variable: appIngress
    label: ""
    group: "Ingress"
    schema:
      type: dict
      attrs:
        - variable: webui
          label: "Web Reverse Proxy Configuration"
          group: "Ingress"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable Web Reverse Proxy"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: entrypoint
                      label: "Select Entrypoint"
                      schema:
                        type: string
                        default: "websecure"
                        required: true
                        enum:
                          - value: "websecure"
                            description: "Websecure: HTTPS/TLS port 443"
                    - variable: hosts
                      label: "Hosts"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: host
                            label: "Host"
                            schema:
                              type: dict
                              attrs:
                                - variable: host
                                  label: "Domain Name"
                                  required: true
                                  schema:
                                    type: string
                                - variable: paths
                                  label: "paths"
                                  schema:
                                    type: list
                                    default: []
                                    items:
                                      - variable: path
                                        label: "Path"
                                        schema:
                                          type: dict
                                          attrs:
                                            - variable: path
                                              label: "path"
                                              schema:
                                                type: string
                                                required: true
                                                default: "/"
                                            - variable: pathType
                                              label: "pathType"
                                              schema:
                                                type: string
                                                required: true
                                                default: "prefix"
                    - variable: certType
                      label: "Select Certificate Type"
                      schema:
                        type: string
                        default: "letsencrypt-prod"
                        enum:
                          - value: ""
                            description: "No Encryption/TLS/Certificates"
                          - value: "letsencrypt-prod"
                            description: "Letsencrypt Production Certificates"
                          - value: "letsencrypt-staging"
                            description: "Letsencrypt Test Certificates"
                          - value: "wildcard"
                            description: "Global Wildcard Certificate"
                          - value: "selfsigned"
                            description: "Self-Signed Certificate"
                          - value: "existingcert"
                            description: "Existing Certificate"
                        show_subquestions_if: "existingcert"
                        subquestions:
                          - variable: existingcert
                            label: "Existing Certificate Name"
                            schema:
                              type: string
                              default: ""
                    - variable: authForwardURL
                      label: "Forward Authentication URL"
                      schema:
                        type: string
                        default: ""
